C51 COMPILER V9.55   MAIN                                                                  06/17/2020 14:18:02 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN c:\Users\Administrator\Documents\Source\MCU\bujin\.\out\main.obj
COMPILER INVOKED BY: c:\Keil_v5\C51\BIN\C51.exe c:\Users\Administrator\Documents\Source\MCU\bujin\.\src\main.c COMPACT O
                    -MF2 ROM(LARGE) OPTIMIZE(8,SPEED) REGFILE(c:\Users\Administrator\Documents\Source\MCU\bujin\.\out\main.ORC) INCDIR(c:\Use
                    -rs\Administrator\Documents\Source\MCU\bujin\.\dependence;c:\Users\Administrator\Documents\Source\MCU\bujin\.\dependence\
                    -build-in;c:\Users\Administrator\Documents\Source\MCU\bujin\.\dependence\build-in\STD;c:\Keil_v5\C51\INC) PRINT(c:\Users\
                    -Administrator\Documents\Source\MCU\bujin\.\out\main.lst) TABS(2) OBJECT(c:\Users\Administrator\Documents\Source\MCU\buji
                    -n\.\out\main.obj)

line level    source

   1          #include <C:\Keil_v5\C51\INC\intrins.h>
   2          #include <C:\Keil_v5\C51\INC\stdlib.h>
   3          #include <C:\Keil_v5\C51\INC\string.h>
   4          #include "stc8.h"
   5          #include "Stc8Iap.h"
   6          #include "stc8uart1.h"
   7          #include "stc8uart2.h"
   8          
   9          sbit Y0 = P2 ^ 5;
  10          sbit Y1 = P2 ^ 4;
  11          sbit Y2 = P2 ^ 3;
  12          sbit Y3 = P2 ^ 2;
  13          sbit Y4 = P4 ^ 2;
  14          sbit Y5 = P2 ^ 0;
  15          
  16          sbit X0 = P1 ^ 2;
  17          sbit X1 = P1 ^ 3;
  18          sbit X2 = P1 ^ 4;
  19          sbit X3 = P4 ^ 4;
  20          sbit X4 = P1 ^ 5;
  21          sbit X5 = P1 ^ 6;
  22          sbit X6 = P1 ^ 7;
  23          sbit X7 = P3 ^ 2;
  24          sbit X8 = P3 ^ 3;
  25          sbit X9 = P3 ^ 4;
  26          
  27          sbit PUL = P0 ^ 6;
  28          sbit DIR = P0 ^ 4;
  29          
  30          #define MB_CycleUp '3'
  31          #define MB_CycleDown '4'
  32          #define MB_HzDown '7'
  33          #define MB_HzUp '6'
  34          
  35          char Button_00[] = "[BN:0]";
  36          char Button_01[] = "[BN:1]";
  37          char Button_02[] = "[BN:2]";
  38          char Button_03[] = "[BN:3]";
  39          char Button_04[] = "[BN:4]";
  40          char Button_05[] = "[BN:5]";
  41          char Button_06[] = "[BN:6]";
  42          char Button_07[] = "[BN:7]";
  43          char Button_08[] = "[BN:8]";
  44          char Button_09[] = "[BN:9]";
  45          
  46          char tests[]="[BN:2]";
  47          
  48          char Page_00[] = "PAGE0OK";
  49          char Page_01[] = "PAGE1OK";
  50          char Page_02[] = "PAGE2OK";
C51 COMPILER V9.55   MAIN                                                                  06/17/2020 14:18:02 PAGE 2   

  51          char Page_03[] = "PAGE3OK";
  52          
  53          void Runmotor(unsigned int);
  54          void Tohome();
  55          void Run();
  56          void UART_Read(u8);
  57          void UART_Handle(char *);
  58          void Rom_Init();
  59          void ROM_Write();
  60          void ButtonHandle(u8);
  61          void CommandHandle();
  62          void test();
  63          
  64          unsigned char MotorHz;    //马达运行频率 addres=0x0010
  65          unsigned char MotorCycle; //马达运行圈数 addres=0x0000
  66          unsigned char home_cycle; //原点偏移 addres=0x0020
  67          
  68          unsigned char Page = 0; //当前页面
  69          unsigned char buf;
  70          
  71          char uart1buff[20] = {0};
  72          char uart2buff[20] = {0};
  73          unsigned char uart1num = 0;
  74          unsigned char uart2num = 0;
  75          unsigned char uart1end=0;
  76          unsigned char uart2end=0;
  77          
  78          unsigned int i, ii;
  79          
  80          u8 Button1;
  81          u8 Button2;
  82          
  83          u8 flag, flage2;
  84          
  85          void Delay100ms()   //@24.000MHz
  86          {
  87   1        unsigned char i, j, k;
  88   1      
  89   1        _nop_();
  90   1        _nop_();
  91   1        i = 13;
  92   1        j = 45;
  93   1        k = 214;
  94   1        do
  95   1        {
  96   2          do
  97   2          {
  98   3            while (--k);
  99   3          } while (--j);
 100   2        } while (--i);
 101   1      }
 102          
 103          
 104          void Delay100us() //@24.000MHz
 105          {
 106   1           unsigned char i, j;
 107   1           i = 4;
 108   1           j = 27;
 109   1           do
 110   1           {
 111   2                while (--j)
 112   2                     ;
C51 COMPILER V9.55   MAIN                                                                  06/17/2020 14:18:02 PAGE 3   

 113   2           } while (--i);
 114   1      }
 115          void Delay1us() //@24.000MHz
 116          {
 117   1           unsigned char i;
 118   1      
 119   1           i = 6;
 120   1           while (--i)
 121   1                ;
 122   1      }
 123          
 124          void UART_Read(u8 dat)
 125          {
 126   1           if(uart1readflage)
 127   1           {
 128   2                if(uart2buffer=='D')IAP_CONTR = 0x60;
 129   2                uart1end=1;
 130   2                uart1readflage=0x00;
 131   2           }
 132   1           if (uart2readflage)
 133   1           {
 134   2                buf = uart2buffer;
 135   2                if (buf != 0x0d && buf != 0x0a && buf != 'K')
 136   2                {
 137   3                     uart2buff[uart2num] = buf;
 138   3                     uart2num += 1;
 139   3                }
 140   2                if (buf == 0x0d || buf == 0x0a || buf == 'K')
 141   2                {
 142   3                     uart2buff[uart2num] = buf;
 143   3                     uart2num += 1;
 144   3                     uart2end=1;
 145   3                }
 146   2                uart2readflage=0x00;
 147   2           }
 148   1      }
*** WARNING C280 IN LINE 124 OF c:\Users\Administrator\Documents\Source\MCU\bujin\.\src\main.c: 'dat': unreferenced loca
             -l variable
 149          
 150          void Run()
 151          {
 152   1           Y0 = 1;
 153   1           while (1)
 154   1           {
 155   2                if (X2 == 0)
 156   2                {
 157   3                     Runmotor(MotorCycle * 400);
 158   3                     Y0 = 0;
 159   3                     Tohome();
 160   3                     while (1)
 161   3                     {
 162   4                          if (X3 != 0 && X2 != 0)
 163   4                               break;
 164   4                     }
 165   3                     Delay100us();
 166   3                     ROM_Write();
 167   3                     return;
 168   3                }
 169   2           }
 170   1      }
 171          
 172          void Runmotor(u16 num)
C51 COMPILER V9.55   MAIN                                                                  06/17/2020 14:18:02 PAGE 4   

 173          {
 174   1           i = 0;
 175   1           ii = 0;
 176   1           while (1)
 177   1           {
 178   2                if (i > num)
 179   2                     break;
 180   2                PUL = 0;
 181   2                for (ii = 0; ii < MotorHz; ii++)
 182   2                {
 183   3                     Delay1us();
 184   3                }
 185   2                PUL = 1;
 186   2                for (ii = 0; ii < MotorHz; ii++)
 187   2                {
 188   3                     Delay1us();
 189   3                }
 190   2                i = i + 1;
 191   2           }
 192   1      }
 193          
 194          void Tohome()
 195          {
 196   1           i = 0;
 197   1           for (i = 0; i < 100; i++)
 198   1           {
 199   2                PUL = 0;
 200   2                Delay100us();
 201   2                Delay100us();
 202   2                Delay100us();
 203   2                PUL = 1;
 204   2                Delay100us();
 205   2                Delay100us();
 206   2                Delay100us();
 207   2           }
 208   1           while (1)
 209   1           {
 210   2                if (X1 == 1)
 211   2                     break;
 212   2                PUL = 0;
 213   2                Delay100us();
 214   2                Delay100us();
 215   2                Delay100us();
 216   2                Delay100us();
 217   2                Delay100us();
 218   2                PUL = 1;
 219   2                Delay100us();
 220   2                Delay100us();
 221   2                Delay100us();
 222   2                Delay100us();
 223   2                Delay100us();
 224   2           }
 225   1           Runmotor(home_cycle);
 226   1           return;
 227   1      }
 228          
 229          void Rom_Init()
 230          {
 231   1           MotorCycle = IapRead(0x0000);
 232   1           MotorHz = IapRead(0x0010);
 233   1           home_cycle = IapRead(0x0020);
 234   1      }
C51 COMPILER V9.55   MAIN                                                                  06/17/2020 14:18:02 PAGE 5   

 235          
 236          void UART_Handle(char *dat)
 237          {
 238   1           if(uart1end)
 239   1           {
 240   2                uart1num=0;
 241   2                uart1end=0;
 242   2                // i=sizeof(uart1buff)/sizeof(uart1buff[0]);
 243   2                // for(ii=0;ii<i;ii++)
 244   2                // {
 245   2                //      uart1buff[ii]=0;
 246   2                // }
 247   2      
 248   2      
 249   2           }
 250   1      
 251   1           if(uart2end)
 252   1           {
 253   2                if(strstr(uart2buff,Button_02))
 254   2                {
 255   3                     switch (Page)
 256   3                     {
 257   4                     case 0:
 258   4                     {                    
 259   5                          Run();
 260   5                          break;
 261   5                     }
 262   4                     default:
 263   4                          break;
 264   4                     }
 265   3                }
 266   2                if(strstr(uart2buff,Button_03))
 267   2                {
 268   3                     Y0=1;
 269   3                     switch (Page)
 270   3                     {
 271   4                     case 1:
 272   4                     {    
 273   5                          MotorCycle+=1;
 274   5                          UartSend(MotorCycle);
 275   5                          break;
 276   5                     }
 277   4                     default:
 278   4                          break;
 279   4                     }
 280   3                     Y0=0;
 281   3                }
 282   2                if(strstr(uart2buff,Button_04))
 283   2                {
 284   3                     switch(Page)
 285   3                     {
 286   4                          case 0:
 287   4                          {
 288   5                               IAP_CONTR = 0x60;
 289   5                               break;
 290   5                          }
 291   4                          case 1:
 292   4                          {
 293   5                               MotorCycle-=1;
 294   5                               UartSend(MotorCycle);
 295   5                               break;
 296   5                          }
C51 COMPILER V9.55   MAIN                                                                  06/17/2020 14:18:02 PAGE 6   

 297   4                          default:
 298   4                               break;
 299   4                     }
 300   3                }
 301   2                if(strstr(uart2buff,Button_06))
 302   2                {
 303   3                     switch (Page)
 304   3                     {
 305   4                     case 2:
 306   4                          {
 307   5                               home_cycle+=1;
 308   5                               UartSend(home_cycle);
 309   5                               break;
 310   5                          }
 311   4                     default:
 312   4                          break;
 313   4                     }
 314   3                }
 315   2                if(strstr(uart2buff,Button_07))
 316   2                {
 317   3                     switch(Page)
 318   3                     {
 319   4                          case 1:
 320   4                          {
 321   5                               MotorHz+=1;
 322   5                               UartSend(MotorHz);
 323   5                               break;
 324   5                          }
 325   4                          case 2:
 326   4                          {
 327   5                               home_cycle-=1;
 328   5                               UartSend(home_cycle);
 329   5                               break;
 330   5                          }
 331   4                          default:
 332   4                               break;
 333   4                     }
 334   3                }
 335   2                if(strstr(uart2buff,Button_08))
 336   2                {
 337   3                     switch(Page)
 338   3                     {
 339   4                          case 1:
 340   4                          {
 341   5                               MotorHz-=1;
 342   5                               UartSend(MotorHz);
 343   5                               break;
 344   5                          }
 345   4                          default:
 346   4                               break;
 347   4                     }
 348   3                }
 349   2      
 350   2                if(strstr(uart2buff,Page_00))
 351   2                {
 352   3                     Page=0;
 353   3                }
 354   2                if(strstr(uart2buff,Page_01))
 355   2                {
 356   3                     Page=1;
 357   3                }
 358   2                if(strstr(uart2buff,Page_02))
C51 COMPILER V9.55   MAIN                                                                  06/17/2020 14:18:02 PAGE 7   

 359   2                {
 360   3                     Page=2;
 361   3                }
 362   2      
 363   2      
 364   2                uart2num=0;
 365   2                uart2end=0;
 366   2                i=sizeof(uart2buff)/sizeof(uart2buff[0]);
 367   2                for(ii=0;ii<i;ii++)
 368   2                {
 369   3                     uart2buff[ii]=0;
 370   3                }
 371   2           }
 372   1      #pragma region 
*** WARNING C245 IN LINE 372 OF c:\Users\Administrator\Documents\Source\MCU\bujin\.\src\main.c: unknown #pragma, line ig
             -nored
 373   1           // switch (dat[0])
 374   1           // {
 375   1           // case MB_CycleUp:
 376   1           // {
 377   1           //      MotorCycle = MotorCycle + 1;
 378   1           //      break;
 379   1           // }
 380   1           // case MB_CycleDown:
 381   1           // {
 382   1           //      MotorCycle = MotorCycle - 1;
 383   1           //      break;
 384   1           // }
 385   1           // case MB_HzUp:
 386   1           // {
 387   1           //      MotorHz = MotorHz + 1;
 388   1           //      break;
 389   1           // }
 390   1           // case MB_HzDown:
 391   1           // {
 392   1           //      MotorHz = MotorHz - 1;
 393   1           //      break;
 394   1           // }
 395   1           // case 'z':
 396   1           // {
 397   1           //      MotorHz = 160;
 398   1           //      MotorCycle = 2;
 399   1           //      break;
 400   1           // }
 401   1           // case 'm':
 402   1           // {
 403   1           //      IAP_CONTR |= 0x60;
 404   1           //      return;
 405   1           // }
 406   1           // case 's':
 407   1           // {
 408   1           //      // databit = IapRead(0x0000);
 409   1           //      // Delay100us();
 410   1           //      // UartSend(databit);
 411   1           //      // delay_ms(100);
 412   1           //      // databit = IapRead(0x0010);
 413   1           //      // Delay100us();
 414   1           //      // UartSend(databit);
 415   1           //      // delay_ms(100);
 416   1           //      // UartSend(MotorHz);
 417   1           //      // delay_ms(100);
 418   1           //      // UartSend(MotorCycle);
C51 COMPILER V9.55   MAIN                                                                  06/17/2020 14:18:02 PAGE 8   

 419   1           //      return;
 420   1           // }
 421   1           // }
 422   1      #pragma endregion
*** WARNING C245 IN LINE 422 OF c:\Users\Administrator\Documents\Source\MCU\bujin\.\src\main.c: unknown #pragma, line ig
             -nored
 423   1      }
*** WARNING C280 IN LINE 236 OF c:\Users\Administrator\Documents\Source\MCU\bujin\.\src\main.c: 'dat': unreferenced loca
             -l variable
 424          
 425          void ROM_Write()
 426          {
 427   1           IapErase(0x0000);
 428   1           Delay100us();
 429   1           IapProgram(0x0000, MotorCycle);
 430   1           Delay100us();
 431   1           IapProgram(0x0010, MotorHz);
 432   1           Delay100us();
 433   1           IapProgram(0x0020, home_cycle);
 434   1      }
 435          
 436          int main()
 437          {
 438   1           Rom_Init();
 439   1           P2 = 0x00;
 440   1           P0M1 = 0x00;
 441   1           P0M0 = 0X00;
 442   1           P2M0 = 0xff;
 443   1           P2M1 = 0x00;
 444   1           UartInit();
 445   1           Uart2Init();
 446   1           AUXR = 0X54;
 447   1           EA = 1;
 448   1           ES = 1;
 449   1           IE2 = 0x01;
 450   1           Tohome();
 451   1           while (1)
 452   1           {
 453   2                if (X2 != 0)
 454   2                {
 455   3                     if (X0 == 0)
 456   3                     {
 457   4                          Run();
 458   4                     }
 459   3                }
 460   2                UART_Read(0);
 461   2                UART_Handle(0);
 462   2           }
 463   1      
 464   1           return 0;
 465   1      }
*** WARNING C294 IN LINE 464 OF c:\Users\Administrator\Documents\Source\MCU\bujin\.\src\main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1308    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =    175      10
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.55   MAIN                                                                  06/17/2020 14:18:02 PAGE 9   

   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  5 WARNING(S),  0 ERROR(S)
